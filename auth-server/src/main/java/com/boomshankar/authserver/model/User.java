package com.boomshankar.authserver.model;
// Generated Mar 23, 2017 2:42:13 PM by Hibernate Tools 5.2.0.Beta1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "customer_details", uniqueConstraints = @UniqueConstraint(columnNames = "email"))
public class User implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private Integer id;
	private String firstName;
	private String lastName;
	private String passwordHash;
	private byte[] salt;
	private String email;
	private String phone;
	private String lastModifiedBy;
	private Date lastModifiedDatetime;
	private boolean isActive;
	private boolean isLocked;
	private boolean isDeleted;
	private boolean isPasswordTemporary;
	@JsonIgnore
	private Set<UserRoleMapping> userRoleMappings = new HashSet<UserRoleMapping>(0);

	public User() {
	}

	public User(String firstName, String lastName, boolean isActive, boolean isLocked, boolean isDeleted,
			boolean isPasswordTemporary) {
		this.firstName = firstName;
		this.lastName = lastName;
		this.isActive = isActive;
		this.isLocked = isLocked;
		this.isDeleted = isDeleted;
		this.isPasswordTemporary = isPasswordTemporary;
	}

	public User(String firstName, String lastName, String passwordHash, byte[] salt, String email, String phone,
			String lastModifiedBy, Date lastModifiedDatetime, boolean isActive, boolean isLocked, boolean isDeleted,
			boolean isPasswordTemporary, Set<UserRoleMapping> userRoleMappings) {
		this.firstName = firstName;
		this.passwordHash = passwordHash;
		this.salt = salt;
		this.email = email;
		this.phone = phone;
		this.lastModifiedBy = lastModifiedBy;
		this.lastModifiedDatetime = lastModifiedDatetime;
		this.isActive = isActive;
		this.isLocked = isLocked;
		this.isDeleted = isDeleted;
		this.isPasswordTemporary = isPasswordTemporary;
		this.userRoleMappings = userRoleMappings;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "first_name", unique = true, nullable = false, length = 100)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "last_name", unique = true, nullable = false, length = 100)
	public String getLastName() {
		return lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "password_hash", length = 65535)
	public String getPasswordHash() {
		return this.passwordHash;
	}

	public void setPasswordHash(String passwordHash) {
		this.passwordHash = passwordHash;
	}

	@Column(name = "salt")
	public byte[] getSalt() {
		return this.salt;
	}

	public void setSalt(byte[] salt) {
		this.salt = salt;
	}

	@Column(name = "email", length = 65535)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "phone", length = 65535)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "last_modified_by", length = 65535)
	public String getLastModifiedBy() {
		return this.lastModifiedBy;
	}

	public void setLastModifiedBy(String lastModifiedBy) {
		this.lastModifiedBy = lastModifiedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_modified_datetime", length = 19)
	public Date getLastModifiedDatetime() {
		return this.lastModifiedDatetime;
	}

	public void setLastModifiedDatetime(Date lastModifiedDatetime) {
		this.lastModifiedDatetime = lastModifiedDatetime;
	}

	@Column(name = "is_active", nullable = false)
	public boolean isIsActive() {
		return this.isActive;
	}

	public void setIsActive(boolean isActive) {
		this.isActive = isActive;
	}

	@Column(name = "is_locked", nullable = false)
	public boolean isIsLocked() {
		return this.isLocked;
	}

	public void setIsLocked(boolean isLocked) {
		this.isLocked = isLocked;
	}

	@Column(name = "is_deleted", nullable = false)
	public boolean isIsDeleted() {
		return this.isDeleted;
	}

	public void setIsDeleted(boolean isDeleted) {
		this.isDeleted = isDeleted;
	}

	@Column(name = "is_password_temporary", nullable = false)
	public boolean isIsPasswordTemporary() {
		return this.isPasswordTemporary;
	}

	public void setIsPasswordTemporary(boolean isPasswordTemporary) {
		this.isPasswordTemporary = isPasswordTemporary;
	}

	@JsonIgnore
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<UserRoleMapping> getUserRoleMappings() {
		return this.userRoleMappings;
	}

	public void setUserRoleMappings(Set<UserRoleMapping> userRoleMappings) {
		this.userRoleMappings = userRoleMappings;
	}

}
